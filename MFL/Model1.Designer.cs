//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("MFLModel", "FK_MFL_attribute_MFL_lodge", "MFL_lodge", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MFL.MFL_lodge), "MFL_attribute", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MFL.MFL_attribute), true)]
[assembly: EdmRelationshipAttribute("MFLModel", "FK_MFL_attributeOption_MFL_attribute", "MFL_attribute", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MFL.MFL_attribute), "MFL_attributeOption", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MFL.MFL_attributeOption), true)]
[assembly: EdmRelationshipAttribute("MFLModel", "FK_MFL_roomAttribute_MFL_attributeOption", "MFL_attributeOption", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MFL.MFL_attributeOption), "MFL_roomAttribute", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MFL.MFL_roomAttribute), true)]
[assembly: EdmRelationshipAttribute("MFLModel", "FK_MFL_lodge_MFLUsers_product", "MFLUsers_product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MFL.MFLUsers_product), "MFL_lodge", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MFL.MFL_lodge), true)]
[assembly: EdmRelationshipAttribute("MFLModel", "FK_MFL_lodgeProperty_MFL_lodge", "MFL_lodge", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MFL.MFL_lodge), "MFL_lodgeProperty", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MFL.MFL_lodgeProperty), true)]
[assembly: EdmRelationshipAttribute("MFLModel", "FK_MFL_room_MFL_lodge", "MFL_lodge", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MFL.MFL_lodge), "MFL_room", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MFL.MFL_room), true)]
[assembly: EdmRelationshipAttribute("MFLModel", "FK_MFL_portal_MFLUsers_product", "MFLUsers_product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MFL.MFLUsers_product), "MFL_portal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MFL.MFL_portal), true)]
[assembly: EdmRelationshipAttribute("MFLModel", "FK_MFL_roomAttribute_MFL_room", "MFL_room", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MFL.MFL_room), "MFL_roomAttribute", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MFL.MFL_roomAttribute), true)]
[assembly: EdmRelationshipAttribute("MFLModel", "FK_MFLUsers_product_MFLUsers_account", "MFLUsers_account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MFL.MFLUsers_account), "MFLUsers_product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MFL.MFLUsers_product), true)]

#endregion

namespace MFL
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class MFLEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“MFLEntities”部分中的连接字符串初始化新 MFLEntities 对象。
        /// </summary>
        public MFLEntities() : base("name=MFLEntities", "MFLEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 MFLEntities 对象。
        /// </summary>
        public MFLEntities(string connectionString) : base(connectionString, "MFLEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 MFLEntities 对象。
        /// </summary>
        public MFLEntities(EntityConnection connection) : base(connection, "MFLEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<MFL_attribute> MFL_attribute
        {
            get
            {
                if ((_MFL_attribute == null))
                {
                    _MFL_attribute = base.CreateObjectSet<MFL_attribute>("MFL_attribute");
                }
                return _MFL_attribute;
            }
        }
        private ObjectSet<MFL_attribute> _MFL_attribute;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<MFL_attributeOption> MFL_attributeOption
        {
            get
            {
                if ((_MFL_attributeOption == null))
                {
                    _MFL_attributeOption = base.CreateObjectSet<MFL_attributeOption>("MFL_attributeOption");
                }
                return _MFL_attributeOption;
            }
        }
        private ObjectSet<MFL_attributeOption> _MFL_attributeOption;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<MFL_lodge> MFL_lodge
        {
            get
            {
                if ((_MFL_lodge == null))
                {
                    _MFL_lodge = base.CreateObjectSet<MFL_lodge>("MFL_lodge");
                }
                return _MFL_lodge;
            }
        }
        private ObjectSet<MFL_lodge> _MFL_lodge;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<MFL_lodgeProperty> MFL_lodgeProperty
        {
            get
            {
                if ((_MFL_lodgeProperty == null))
                {
                    _MFL_lodgeProperty = base.CreateObjectSet<MFL_lodgeProperty>("MFL_lodgeProperty");
                }
                return _MFL_lodgeProperty;
            }
        }
        private ObjectSet<MFL_lodgeProperty> _MFL_lodgeProperty;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<MFL_portal> MFL_portal
        {
            get
            {
                if ((_MFL_portal == null))
                {
                    _MFL_portal = base.CreateObjectSet<MFL_portal>("MFL_portal");
                }
                return _MFL_portal;
            }
        }
        private ObjectSet<MFL_portal> _MFL_portal;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<MFL_room> MFL_room
        {
            get
            {
                if ((_MFL_room == null))
                {
                    _MFL_room = base.CreateObjectSet<MFL_room>("MFL_room");
                }
                return _MFL_room;
            }
        }
        private ObjectSet<MFL_room> _MFL_room;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<MFL_roomAttribute> MFL_roomAttribute
        {
            get
            {
                if ((_MFL_roomAttribute == null))
                {
                    _MFL_roomAttribute = base.CreateObjectSet<MFL_roomAttribute>("MFL_roomAttribute");
                }
                return _MFL_roomAttribute;
            }
        }
        private ObjectSet<MFL_roomAttribute> _MFL_roomAttribute;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<MFLTC_transaction> MFLTC_transaction
        {
            get
            {
                if ((_MFLTC_transaction == null))
                {
                    _MFLTC_transaction = base.CreateObjectSet<MFLTC_transaction>("MFLTC_transaction");
                }
                return _MFLTC_transaction;
            }
        }
        private ObjectSet<MFLTC_transaction> _MFLTC_transaction;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<MFLUsers_account> MFLUsers_account
        {
            get
            {
                if ((_MFLUsers_account == null))
                {
                    _MFLUsers_account = base.CreateObjectSet<MFLUsers_account>("MFLUsers_account");
                }
                return _MFLUsers_account;
            }
        }
        private ObjectSet<MFLUsers_account> _MFLUsers_account;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<MFLUsers_product> MFLUsers_product
        {
            get
            {
                if ((_MFLUsers_product == null))
                {
                    _MFLUsers_product = base.CreateObjectSet<MFLUsers_product>("MFLUsers_product");
                }
                return _MFLUsers_product;
            }
        }
        private ObjectSet<MFLUsers_product> _MFLUsers_product;

        #endregion
        #region AddTo 方法
    
        /// <summary>
        /// 用于向 MFL_attribute EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToMFL_attribute(MFL_attribute mFL_attribute)
        {
            base.AddObject("MFL_attribute", mFL_attribute);
        }
    
        /// <summary>
        /// 用于向 MFL_attributeOption EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToMFL_attributeOption(MFL_attributeOption mFL_attributeOption)
        {
            base.AddObject("MFL_attributeOption", mFL_attributeOption);
        }
    
        /// <summary>
        /// 用于向 MFL_lodge EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToMFL_lodge(MFL_lodge mFL_lodge)
        {
            base.AddObject("MFL_lodge", mFL_lodge);
        }
    
        /// <summary>
        /// 用于向 MFL_lodgeProperty EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToMFL_lodgeProperty(MFL_lodgeProperty mFL_lodgeProperty)
        {
            base.AddObject("MFL_lodgeProperty", mFL_lodgeProperty);
        }
    
        /// <summary>
        /// 用于向 MFL_portal EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToMFL_portal(MFL_portal mFL_portal)
        {
            base.AddObject("MFL_portal", mFL_portal);
        }
    
        /// <summary>
        /// 用于向 MFL_room EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToMFL_room(MFL_room mFL_room)
        {
            base.AddObject("MFL_room", mFL_room);
        }
    
        /// <summary>
        /// 用于向 MFL_roomAttribute EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToMFL_roomAttribute(MFL_roomAttribute mFL_roomAttribute)
        {
            base.AddObject("MFL_roomAttribute", mFL_roomAttribute);
        }
    
        /// <summary>
        /// 用于向 MFLTC_transaction EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToMFLTC_transaction(MFLTC_transaction mFLTC_transaction)
        {
            base.AddObject("MFLTC_transaction", mFLTC_transaction);
        }
    
        /// <summary>
        /// 用于向 MFLUsers_account EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToMFLUsers_account(MFLUsers_account mFLUsers_account)
        {
            base.AddObject("MFLUsers_account", mFLUsers_account);
        }
    
        /// <summary>
        /// 用于向 MFLUsers_product EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToMFLUsers_product(MFLUsers_product mFLUsers_product)
        {
            base.AddObject("MFLUsers_product", mFLUsers_product);
        }

        #endregion
    }
    

    #endregion
    
    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MFLModel", Name="MFL_attribute")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MFL_attribute : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 MFL_attribute 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        /// <param name="lodge_id">lodge_id 属性的初始值。</param>
        public static MFL_attribute CreateMFL_attribute(global::System.Int32 id, global::System.Int32 lodge_id)
        {
            MFL_attribute mFL_attribute = new MFL_attribute();
            mFL_attribute.id = id;
            mFL_attribute.lodge_id = lodge_id;
            return mFL_attribute;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 lodge_id
        {
            get
            {
                return _lodge_id;
            }
            set
            {
                Onlodge_idChanging(value);
                ReportPropertyChanging("lodge_id");
                _lodge_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("lodge_id");
                Onlodge_idChanged();
            }
        }
        private global::System.Int32 _lodge_id;
        partial void Onlodge_idChanging(global::System.Int32 value);
        partial void Onlodge_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String icon
        {
            get
            {
                return _icon;
            }
            set
            {
                OniconChanging(value);
                ReportPropertyChanging("icon");
                _icon = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("icon");
                OniconChanged();
            }
        }
        private global::System.String _icon;
        partial void OniconChanging(global::System.String value);
        partial void OniconChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MFLModel", "FK_MFL_attribute_MFL_lodge", "MFL_lodge")]
        public MFL_lodge MFL_lodge
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MFL_lodge>("MFLModel.FK_MFL_attribute_MFL_lodge", "MFL_lodge").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MFL_lodge>("MFLModel.FK_MFL_attribute_MFL_lodge", "MFL_lodge").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MFL_lodge> MFL_lodgeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MFL_lodge>("MFLModel.FK_MFL_attribute_MFL_lodge", "MFL_lodge");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MFL_lodge>("MFLModel.FK_MFL_attribute_MFL_lodge", "MFL_lodge", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MFLModel", "FK_MFL_attributeOption_MFL_attribute", "MFL_attributeOption")]
        public EntityCollection<MFL_attributeOption> MFL_attributeOption
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MFL_attributeOption>("MFLModel.FK_MFL_attributeOption_MFL_attribute", "MFL_attributeOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MFL_attributeOption>("MFLModel.FK_MFL_attributeOption_MFL_attribute", "MFL_attributeOption", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MFLModel", Name="MFL_attributeOption")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MFL_attributeOption : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 MFL_attributeOption 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        /// <param name="attribute_id">attribute_id 属性的初始值。</param>
        public static MFL_attributeOption CreateMFL_attributeOption(global::System.Int32 id, global::System.Int32 attribute_id)
        {
            MFL_attributeOption mFL_attributeOption = new MFL_attributeOption();
            mFL_attributeOption.id = id;
            mFL_attributeOption.attribute_id = attribute_id;
            return mFL_attributeOption;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 attribute_id
        {
            get
            {
                return _attribute_id;
            }
            set
            {
                Onattribute_idChanging(value);
                ReportPropertyChanging("attribute_id");
                _attribute_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("attribute_id");
                Onattribute_idChanged();
            }
        }
        private global::System.Int32 _attribute_id;
        partial void Onattribute_idChanging(global::System.Int32 value);
        partial void Onattribute_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String icon
        {
            get
            {
                return _icon;
            }
            set
            {
                OniconChanging(value);
                ReportPropertyChanging("icon");
                _icon = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("icon");
                OniconChanged();
            }
        }
        private global::System.String _icon;
        partial void OniconChanging(global::System.String value);
        partial void OniconChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MFLModel", "FK_MFL_attributeOption_MFL_attribute", "MFL_attribute")]
        public MFL_attribute MFL_attribute
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MFL_attribute>("MFLModel.FK_MFL_attributeOption_MFL_attribute", "MFL_attribute").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MFL_attribute>("MFLModel.FK_MFL_attributeOption_MFL_attribute", "MFL_attribute").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MFL_attribute> MFL_attributeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MFL_attribute>("MFLModel.FK_MFL_attributeOption_MFL_attribute", "MFL_attribute");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MFL_attribute>("MFLModel.FK_MFL_attributeOption_MFL_attribute", "MFL_attribute", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MFLModel", "FK_MFL_roomAttribute_MFL_attributeOption", "MFL_roomAttribute")]
        public EntityCollection<MFL_roomAttribute> MFL_roomAttribute
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MFL_roomAttribute>("MFLModel.FK_MFL_roomAttribute_MFL_attributeOption", "MFL_roomAttribute");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MFL_roomAttribute>("MFLModel.FK_MFL_roomAttribute_MFL_attributeOption", "MFL_roomAttribute", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MFLModel", Name="MFL_lodge")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MFL_lodge : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 MFL_lodge 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        /// <param name="enabled">enabled 属性的初始值。</param>
        /// <param name="mFLUsers_account_id">MFLUsers_account_id 属性的初始值。</param>
        /// <param name="ident">ident 属性的初始值。</param>
        /// <param name="capPhoto">capPhoto 属性的初始值。</param>
        /// <param name="avaPhoto">avaPhoto 属性的初始值。</param>
        /// <param name="product_id">product_id 属性的初始值。</param>
        /// <param name="staHistory">staHistory 属性的初始值。</param>
        /// <param name="staToday">staToday 属性的初始值。</param>
        /// <param name="staTodayDate">staTodayDate 属性的初始值。</param>
        public static MFL_lodge CreateMFL_lodge(global::System.Int32 id, global::System.Boolean enabled, global::System.Int32 mFLUsers_account_id, global::System.String ident, global::System.Int64 capPhoto, global::System.Int64 avaPhoto, global::System.Int32 product_id, global::System.Int32 staHistory, global::System.Int32 staToday, global::System.DateTime staTodayDate)
        {
            MFL_lodge mFL_lodge = new MFL_lodge();
            mFL_lodge.id = id;
            mFL_lodge.enabled = enabled;
            mFL_lodge.MFLUsers_account_id = mFLUsers_account_id;
            mFL_lodge.ident = ident;
            mFL_lodge.capPhoto = capPhoto;
            mFL_lodge.avaPhoto = avaPhoto;
            mFL_lodge.product_id = product_id;
            mFL_lodge.staHistory = staHistory;
            mFL_lodge.staToday = staToday;
            mFL_lodge.staTodayDate = staTodayDate;
            return mFL_lodge;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean enabled
        {
            get
            {
                return _enabled;
            }
            set
            {
                OnenabledChanging(value);
                ReportPropertyChanging("enabled");
                _enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("enabled");
                OnenabledChanged();
            }
        }
        private global::System.Boolean _enabled;
        partial void OnenabledChanging(global::System.Boolean value);
        partial void OnenabledChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MFLUsers_account_id
        {
            get
            {
                return _MFLUsers_account_id;
            }
            set
            {
                OnMFLUsers_account_idChanging(value);
                ReportPropertyChanging("MFLUsers_account_id");
                _MFLUsers_account_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MFLUsers_account_id");
                OnMFLUsers_account_idChanged();
            }
        }
        private global::System.Int32 _MFLUsers_account_id;
        partial void OnMFLUsers_account_idChanging(global::System.Int32 value);
        partial void OnMFLUsers_account_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ident
        {
            get
            {
                return _ident;
            }
            set
            {
                OnidentChanging(value);
                ReportPropertyChanging("ident");
                _ident = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ident");
                OnidentChanged();
            }
        }
        private global::System.String _ident;
        partial void OnidentChanging(global::System.String value);
        partial void OnidentChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 capPhoto
        {
            get
            {
                return _capPhoto;
            }
            set
            {
                OncapPhotoChanging(value);
                ReportPropertyChanging("capPhoto");
                _capPhoto = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("capPhoto");
                OncapPhotoChanged();
            }
        }
        private global::System.Int64 _capPhoto;
        partial void OncapPhotoChanging(global::System.Int64 value);
        partial void OncapPhotoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 avaPhoto
        {
            get
            {
                return _avaPhoto;
            }
            set
            {
                OnavaPhotoChanging(value);
                ReportPropertyChanging("avaPhoto");
                _avaPhoto = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("avaPhoto");
                OnavaPhotoChanged();
            }
        }
        private global::System.Int64 _avaPhoto;
        partial void OnavaPhotoChanging(global::System.Int64 value);
        partial void OnavaPhotoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 product_id
        {
            get
            {
                return _product_id;
            }
            set
            {
                Onproduct_idChanging(value);
                ReportPropertyChanging("product_id");
                _product_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("product_id");
                Onproduct_idChanged();
            }
        }
        private global::System.Int32 _product_id;
        partial void Onproduct_idChanging(global::System.Int32 value);
        partial void Onproduct_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String adminPwd
        {
            get
            {
                return _adminPwd;
            }
            set
            {
                OnadminPwdChanging(value);
                ReportPropertyChanging("adminPwd");
                _adminPwd = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("adminPwd");
                OnadminPwdChanged();
            }
        }
        private global::System.String _adminPwd;
        partial void OnadminPwdChanging(global::System.String value);
        partial void OnadminPwdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 staHistory
        {
            get
            {
                return _staHistory;
            }
            set
            {
                OnstaHistoryChanging(value);
                ReportPropertyChanging("staHistory");
                _staHistory = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("staHistory");
                OnstaHistoryChanged();
            }
        }
        private global::System.Int32 _staHistory;
        partial void OnstaHistoryChanging(global::System.Int32 value);
        partial void OnstaHistoryChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 staToday
        {
            get
            {
                return _staToday;
            }
            set
            {
                OnstaTodayChanging(value);
                ReportPropertyChanging("staToday");
                _staToday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("staToday");
                OnstaTodayChanged();
            }
        }
        private global::System.Int32 _staToday;
        partial void OnstaTodayChanging(global::System.Int32 value);
        partial void OnstaTodayChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime staTodayDate
        {
            get
            {
                return _staTodayDate;
            }
            set
            {
                OnstaTodayDateChanging(value);
                ReportPropertyChanging("staTodayDate");
                _staTodayDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("staTodayDate");
                OnstaTodayDateChanged();
            }
        }
        private global::System.DateTime _staTodayDate;
        partial void OnstaTodayDateChanging(global::System.DateTime value);
        partial void OnstaTodayDateChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MFLModel", "FK_MFL_attribute_MFL_lodge", "MFL_attribute")]
        public EntityCollection<MFL_attribute> MFL_attribute
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MFL_attribute>("MFLModel.FK_MFL_attribute_MFL_lodge", "MFL_attribute");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MFL_attribute>("MFLModel.FK_MFL_attribute_MFL_lodge", "MFL_attribute", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MFLModel", "FK_MFL_lodge_MFLUsers_product", "MFLUsers_product")]
        public MFLUsers_product MFLUsers_product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MFLUsers_product>("MFLModel.FK_MFL_lodge_MFLUsers_product", "MFLUsers_product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MFLUsers_product>("MFLModel.FK_MFL_lodge_MFLUsers_product", "MFLUsers_product").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MFLUsers_product> MFLUsers_productReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MFLUsers_product>("MFLModel.FK_MFL_lodge_MFLUsers_product", "MFLUsers_product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MFLUsers_product>("MFLModel.FK_MFL_lodge_MFLUsers_product", "MFLUsers_product", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MFLModel", "FK_MFL_lodgeProperty_MFL_lodge", "MFL_lodgeProperty")]
        public EntityCollection<MFL_lodgeProperty> MFL_lodgeProperty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MFL_lodgeProperty>("MFLModel.FK_MFL_lodgeProperty_MFL_lodge", "MFL_lodgeProperty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MFL_lodgeProperty>("MFLModel.FK_MFL_lodgeProperty_MFL_lodge", "MFL_lodgeProperty", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MFLModel", "FK_MFL_room_MFL_lodge", "MFL_room")]
        public EntityCollection<MFL_room> MFL_room
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MFL_room>("MFLModel.FK_MFL_room_MFL_lodge", "MFL_room");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MFL_room>("MFLModel.FK_MFL_room_MFL_lodge", "MFL_room", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MFLModel", Name="MFL_lodgeProperty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MFL_lodgeProperty : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 MFL_lodgeProperty 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        /// <param name="lodge_id">lodge_id 属性的初始值。</param>
        /// <param name="name">name 属性的初始值。</param>
        public static MFL_lodgeProperty CreateMFL_lodgeProperty(global::System.Int32 id, global::System.Int32 lodge_id, global::System.String name)
        {
            MFL_lodgeProperty mFL_lodgeProperty = new MFL_lodgeProperty();
            mFL_lodgeProperty.id = id;
            mFL_lodgeProperty.lodge_id = lodge_id;
            mFL_lodgeProperty.name = name;
            return mFL_lodgeProperty;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 lodge_id
        {
            get
            {
                return _lodge_id;
            }
            set
            {
                Onlodge_idChanging(value);
                ReportPropertyChanging("lodge_id");
                _lodge_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("lodge_id");
                Onlodge_idChanged();
            }
        }
        private global::System.Int32 _lodge_id;
        partial void Onlodge_idChanging(global::System.Int32 value);
        partial void Onlodge_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String value
        {
            get
            {
                return _value;
            }
            set
            {
                OnvalueChanging(value);
                ReportPropertyChanging("value");
                _value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("value");
                OnvalueChanged();
            }
        }
        private global::System.String _value;
        partial void OnvalueChanging(global::System.String value);
        partial void OnvalueChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MFLModel", "FK_MFL_lodgeProperty_MFL_lodge", "MFL_lodge")]
        public MFL_lodge MFL_lodge
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MFL_lodge>("MFLModel.FK_MFL_lodgeProperty_MFL_lodge", "MFL_lodge").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MFL_lodge>("MFLModel.FK_MFL_lodgeProperty_MFL_lodge", "MFL_lodge").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MFL_lodge> MFL_lodgeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MFL_lodge>("MFLModel.FK_MFL_lodgeProperty_MFL_lodge", "MFL_lodge");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MFL_lodge>("MFLModel.FK_MFL_lodgeProperty_MFL_lodge", "MFL_lodge", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MFLModel", Name="MFL_portal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MFL_portal : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 MFL_portal 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        /// <param name="name">name 属性的初始值。</param>
        /// <param name="ident">ident 属性的初始值。</param>
        /// <param name="lodges">lodges 属性的初始值。</param>
        /// <param name="product_id">product_id 属性的初始值。</param>
        public static MFL_portal CreateMFL_portal(global::System.Int32 id, global::System.String name, global::System.String ident, global::System.String lodges, global::System.Int32 product_id)
        {
            MFL_portal mFL_portal = new MFL_portal();
            mFL_portal.id = id;
            mFL_portal.name = name;
            mFL_portal.ident = ident;
            mFL_portal.lodges = lodges;
            mFL_portal.product_id = product_id;
            return mFL_portal;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ident
        {
            get
            {
                return _ident;
            }
            set
            {
                OnidentChanging(value);
                ReportPropertyChanging("ident");
                _ident = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ident");
                OnidentChanged();
            }
        }
        private global::System.String _ident;
        partial void OnidentChanging(global::System.String value);
        partial void OnidentChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String lodges
        {
            get
            {
                return _lodges;
            }
            set
            {
                OnlodgesChanging(value);
                ReportPropertyChanging("lodges");
                _lodges = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("lodges");
                OnlodgesChanged();
            }
        }
        private global::System.String _lodges;
        partial void OnlodgesChanging(global::System.String value);
        partial void OnlodgesChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 product_id
        {
            get
            {
                return _product_id;
            }
            set
            {
                Onproduct_idChanging(value);
                ReportPropertyChanging("product_id");
                _product_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("product_id");
                Onproduct_idChanged();
            }
        }
        private global::System.Int32 _product_id;
        partial void Onproduct_idChanging(global::System.Int32 value);
        partial void Onproduct_idChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MFLModel", "FK_MFL_portal_MFLUsers_product", "MFLUsers_product")]
        public MFLUsers_product MFLUsers_product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MFLUsers_product>("MFLModel.FK_MFL_portal_MFLUsers_product", "MFLUsers_product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MFLUsers_product>("MFLModel.FK_MFL_portal_MFLUsers_product", "MFLUsers_product").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MFLUsers_product> MFLUsers_productReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MFLUsers_product>("MFLModel.FK_MFL_portal_MFLUsers_product", "MFLUsers_product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MFLUsers_product>("MFLModel.FK_MFL_portal_MFLUsers_product", "MFLUsers_product", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MFLModel", Name="MFL_room")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MFL_room : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 MFL_room 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        /// <param name="lodge_id">lodge_id 属性的初始值。</param>
        public static MFL_room CreateMFL_room(global::System.Int32 id, global::System.Int32 lodge_id)
        {
            MFL_room mFL_room = new MFL_room();
            mFL_room.id = id;
            mFL_room.lodge_id = lodge_id;
            return mFL_room;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 lodge_id
        {
            get
            {
                return _lodge_id;
            }
            set
            {
                Onlodge_idChanging(value);
                ReportPropertyChanging("lodge_id");
                _lodge_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("lodge_id");
                Onlodge_idChanged();
            }
        }
        private global::System.Int32 _lodge_id;
        partial void Onlodge_idChanging(global::System.Int32 value);
        partial void Onlodge_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String prize
        {
            get
            {
                return _prize;
            }
            set
            {
                OnprizeChanging(value);
                ReportPropertyChanging("prize");
                _prize = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("prize");
                OnprizeChanged();
            }
        }
        private global::System.String _prize;
        partial void OnprizeChanging(global::System.String value);
        partial void OnprizeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String icon
        {
            get
            {
                return _icon;
            }
            set
            {
                OniconChanging(value);
                ReportPropertyChanging("icon");
                _icon = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("icon");
                OniconChanged();
            }
        }
        private global::System.String _icon;
        partial void OniconChanging(global::System.String value);
        partial void OniconChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MFLModel", "FK_MFL_room_MFL_lodge", "MFL_lodge")]
        public MFL_lodge MFL_lodge
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MFL_lodge>("MFLModel.FK_MFL_room_MFL_lodge", "MFL_lodge").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MFL_lodge>("MFLModel.FK_MFL_room_MFL_lodge", "MFL_lodge").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MFL_lodge> MFL_lodgeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MFL_lodge>("MFLModel.FK_MFL_room_MFL_lodge", "MFL_lodge");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MFL_lodge>("MFLModel.FK_MFL_room_MFL_lodge", "MFL_lodge", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MFLModel", "FK_MFL_roomAttribute_MFL_room", "MFL_roomAttribute")]
        public EntityCollection<MFL_roomAttribute> MFL_roomAttribute
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MFL_roomAttribute>("MFLModel.FK_MFL_roomAttribute_MFL_room", "MFL_roomAttribute");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MFL_roomAttribute>("MFLModel.FK_MFL_roomAttribute_MFL_room", "MFL_roomAttribute", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MFLModel", Name="MFL_roomAttribute")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MFL_roomAttribute : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 MFL_roomAttribute 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        /// <param name="room_id">room_id 属性的初始值。</param>
        public static MFL_roomAttribute CreateMFL_roomAttribute(global::System.Int32 id, global::System.Int32 room_id)
        {
            MFL_roomAttribute mFL_roomAttribute = new MFL_roomAttribute();
            mFL_roomAttribute.id = id;
            mFL_roomAttribute.room_id = room_id;
            return mFL_roomAttribute;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 room_id
        {
            get
            {
                return _room_id;
            }
            set
            {
                Onroom_idChanging(value);
                ReportPropertyChanging("room_id");
                _room_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("room_id");
                Onroom_idChanged();
            }
        }
        private global::System.Int32 _room_id;
        partial void Onroom_idChanging(global::System.Int32 value);
        partial void Onroom_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> attributeOption_id
        {
            get
            {
                return _attributeOption_id;
            }
            set
            {
                OnattributeOption_idChanging(value);
                ReportPropertyChanging("attributeOption_id");
                _attributeOption_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("attributeOption_id");
                OnattributeOption_idChanged();
            }
        }
        private Nullable<global::System.Int32> _attributeOption_id;
        partial void OnattributeOption_idChanging(Nullable<global::System.Int32> value);
        partial void OnattributeOption_idChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MFLModel", "FK_MFL_roomAttribute_MFL_attributeOption", "MFL_attributeOption")]
        public MFL_attributeOption MFL_attributeOption
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MFL_attributeOption>("MFLModel.FK_MFL_roomAttribute_MFL_attributeOption", "MFL_attributeOption").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MFL_attributeOption>("MFLModel.FK_MFL_roomAttribute_MFL_attributeOption", "MFL_attributeOption").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MFL_attributeOption> MFL_attributeOptionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MFL_attributeOption>("MFLModel.FK_MFL_roomAttribute_MFL_attributeOption", "MFL_attributeOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MFL_attributeOption>("MFLModel.FK_MFL_roomAttribute_MFL_attributeOption", "MFL_attributeOption", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MFLModel", "FK_MFL_roomAttribute_MFL_room", "MFL_room")]
        public MFL_room MFL_room
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MFL_room>("MFLModel.FK_MFL_roomAttribute_MFL_room", "MFL_room").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MFL_room>("MFLModel.FK_MFL_roomAttribute_MFL_room", "MFL_room").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MFL_room> MFL_roomReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MFL_room>("MFLModel.FK_MFL_roomAttribute_MFL_room", "MFL_room");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MFL_room>("MFLModel.FK_MFL_roomAttribute_MFL_room", "MFL_room", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MFLModel", Name="MFLTC_transaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MFLTC_transaction : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 MFLTC_transaction 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        /// <param name="submitTime">submitTime 属性的初始值。</param>
        /// <param name="data">data 属性的初始值。</param>
        /// <param name="submitUser">submitUser 属性的初始值。</param>
        /// <param name="type">type 属性的初始值。</param>
        public static MFLTC_transaction CreateMFLTC_transaction(global::System.Int32 id, global::System.DateTime submitTime, global::System.Byte[] data, global::System.String submitUser, global::System.String type)
        {
            MFLTC_transaction mFLTC_transaction = new MFLTC_transaction();
            mFLTC_transaction.id = id;
            mFLTC_transaction.submitTime = submitTime;
            mFLTC_transaction.data = data;
            mFLTC_transaction.submitUser = submitUser;
            mFLTC_transaction.type = type;
            return mFLTC_transaction;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime submitTime
        {
            get
            {
                return _submitTime;
            }
            set
            {
                OnsubmitTimeChanging(value);
                ReportPropertyChanging("submitTime");
                _submitTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("submitTime");
                OnsubmitTimeChanged();
            }
        }
        private global::System.DateTime _submitTime;
        partial void OnsubmitTimeChanging(global::System.DateTime value);
        partial void OnsubmitTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> executionTime
        {
            get
            {
                return _executionTime;
            }
            set
            {
                OnexecutionTimeChanging(value);
                ReportPropertyChanging("executionTime");
                _executionTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("executionTime");
                OnexecutionTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _executionTime;
        partial void OnexecutionTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnexecutionTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] data
        {
            get
            {
                return StructuralObject.GetValidValue(_data);
            }
            set
            {
                OndataChanging(value);
                ReportPropertyChanging("data");
                _data = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("data");
                OndataChanged();
            }
        }
        private global::System.Byte[] _data;
        partial void OndataChanging(global::System.Byte[] value);
        partial void OndataChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String submitUser
        {
            get
            {
                return _submitUser;
            }
            set
            {
                OnsubmitUserChanging(value);
                ReportPropertyChanging("submitUser");
                _submitUser = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("submitUser");
                OnsubmitUserChanged();
            }
        }
        private global::System.String _submitUser;
        partial void OnsubmitUserChanging(global::System.String value);
        partial void OnsubmitUserChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String type
        {
            get
            {
                return _type;
            }
            set
            {
                OntypeChanging(value);
                ReportPropertyChanging("type");
                _type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("type");
                OntypeChanged();
            }
        }
        private global::System.String _type;
        partial void OntypeChanging(global::System.String value);
        partial void OntypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String auditer
        {
            get
            {
                return _auditer;
            }
            set
            {
                OnauditerChanging(value);
                ReportPropertyChanging("auditer");
                _auditer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("auditer");
                OnauditerChanged();
            }
        }
        private global::System.String _auditer;
        partial void OnauditerChanging(global::System.String value);
        partial void OnauditerChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String error
        {
            get
            {
                return _error;
            }
            set
            {
                OnerrorChanging(value);
                ReportPropertyChanging("error");
                _error = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("error");
                OnerrorChanged();
            }
        }
        private global::System.String _error;
        partial void OnerrorChanging(global::System.String value);
        partial void OnerrorChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String errorData
        {
            get
            {
                return _errorData;
            }
            set
            {
                OnerrorDataChanging(value);
                ReportPropertyChanging("errorData");
                _errorData = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("errorData");
                OnerrorDataChanged();
            }
        }
        private global::System.String _errorData;
        partial void OnerrorDataChanging(global::System.String value);
        partial void OnerrorDataChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MFLModel", Name="MFLUsers_account")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MFLUsers_account : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 MFLUsers_account 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        /// <param name="username">username 属性的初始值。</param>
        /// <param name="password">password 属性的初始值。</param>
        /// <param name="balance">balance 属性的初始值。</param>
        /// <param name="pName">pName 属性的初始值。</param>
        /// <param name="pProvince">pProvince 属性的初始值。</param>
        /// <param name="pCity">pCity 属性的初始值。</param>
        /// <param name="pSex">pSex 属性的初始值。</param>
        /// <param name="pTraffic">pTraffic 属性的初始值。</param>
        /// <param name="isAdmin">isAdmin 属性的初始值。</param>
        public static MFLUsers_account CreateMFLUsers_account(global::System.Int32 id, global::System.String username, global::System.String password, global::System.Int32 balance, global::System.String pName, global::System.String pProvince, global::System.String pCity, global::System.Boolean pSex, global::System.String pTraffic, global::System.Boolean isAdmin)
        {
            MFLUsers_account mFLUsers_account = new MFLUsers_account();
            mFLUsers_account.id = id;
            mFLUsers_account.username = username;
            mFLUsers_account.password = password;
            mFLUsers_account.balance = balance;
            mFLUsers_account.pName = pName;
            mFLUsers_account.pProvince = pProvince;
            mFLUsers_account.pCity = pCity;
            mFLUsers_account.pSex = pSex;
            mFLUsers_account.pTraffic = pTraffic;
            mFLUsers_account.isAdmin = isAdmin;
            return mFLUsers_account;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String descriptions
        {
            get
            {
                return _descriptions;
            }
            set
            {
                OndescriptionsChanging(value);
                ReportPropertyChanging("descriptions");
                _descriptions = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("descriptions");
                OndescriptionsChanged();
            }
        }
        private global::System.String _descriptions;
        partial void OndescriptionsChanging(global::System.String value);
        partial void OndescriptionsChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 balance
        {
            get
            {
                return _balance;
            }
            set
            {
                OnbalanceChanging(value);
                ReportPropertyChanging("balance");
                _balance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("balance");
                OnbalanceChanged();
            }
        }
        private global::System.Int32 _balance;
        partial void OnbalanceChanging(global::System.Int32 value);
        partial void OnbalanceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String pName
        {
            get
            {
                return _pName;
            }
            set
            {
                OnpNameChanging(value);
                ReportPropertyChanging("pName");
                _pName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("pName");
                OnpNameChanged();
            }
        }
        private global::System.String _pName;
        partial void OnpNameChanging(global::System.String value);
        partial void OnpNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String pProvince
        {
            get
            {
                return _pProvince;
            }
            set
            {
                OnpProvinceChanging(value);
                ReportPropertyChanging("pProvince");
                _pProvince = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("pProvince");
                OnpProvinceChanged();
            }
        }
        private global::System.String _pProvince;
        partial void OnpProvinceChanging(global::System.String value);
        partial void OnpProvinceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String pCity
        {
            get
            {
                return _pCity;
            }
            set
            {
                OnpCityChanging(value);
                ReportPropertyChanging("pCity");
                _pCity = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("pCity");
                OnpCityChanged();
            }
        }
        private global::System.String _pCity;
        partial void OnpCityChanging(global::System.String value);
        partial void OnpCityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean pSex
        {
            get
            {
                return _pSex;
            }
            set
            {
                OnpSexChanging(value);
                ReportPropertyChanging("pSex");
                _pSex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("pSex");
                OnpSexChanged();
            }
        }
        private global::System.Boolean _pSex;
        partial void OnpSexChanging(global::System.Boolean value);
        partial void OnpSexChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String pTraffic
        {
            get
            {
                return _pTraffic;
            }
            set
            {
                OnpTrafficChanging(value);
                ReportPropertyChanging("pTraffic");
                _pTraffic = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("pTraffic");
                OnpTrafficChanged();
            }
        }
        private global::System.String _pTraffic;
        partial void OnpTrafficChanging(global::System.String value);
        partial void OnpTrafficChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isAdmin
        {
            get
            {
                return _isAdmin;
            }
            set
            {
                OnisAdminChanging(value);
                ReportPropertyChanging("isAdmin");
                _isAdmin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isAdmin");
                OnisAdminChanged();
            }
        }
        private global::System.Boolean _isAdmin;
        partial void OnisAdminChanging(global::System.Boolean value);
        partial void OnisAdminChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MFLModel", "FK_MFLUsers_product_MFLUsers_account", "MFLUsers_product")]
        public EntityCollection<MFLUsers_product> MFLUsers_product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MFLUsers_product>("MFLModel.FK_MFLUsers_product_MFLUsers_account", "MFLUsers_product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MFLUsers_product>("MFLModel.FK_MFLUsers_product_MFLUsers_account", "MFLUsers_product", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MFLModel", Name="MFLUsers_product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MFLUsers_product : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 MFLUsers_product 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        /// <param name="initiate_time">initiate_time 属性的初始值。</param>
        /// <param name="type">type 属性的初始值。</param>
        /// <param name="due_time">due_time 属性的初始值。</param>
        /// <param name="user_id">user_id 属性的初始值。</param>
        public static MFLUsers_product CreateMFLUsers_product(global::System.Int32 id, global::System.DateTime initiate_time, global::System.String type, global::System.DateTime due_time, global::System.Int32 user_id)
        {
            MFLUsers_product mFLUsers_product = new MFLUsers_product();
            mFLUsers_product.id = id;
            mFLUsers_product.initiate_time = initiate_time;
            mFLUsers_product.type = type;
            mFLUsers_product.due_time = due_time;
            mFLUsers_product.user_id = user_id;
            return mFLUsers_product;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime initiate_time
        {
            get
            {
                return _initiate_time;
            }
            set
            {
                Oninitiate_timeChanging(value);
                ReportPropertyChanging("initiate_time");
                _initiate_time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("initiate_time");
                Oninitiate_timeChanged();
            }
        }
        private global::System.DateTime _initiate_time;
        partial void Oninitiate_timeChanging(global::System.DateTime value);
        partial void Oninitiate_timeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String type
        {
            get
            {
                return _type;
            }
            set
            {
                OntypeChanging(value);
                ReportPropertyChanging("type");
                _type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("type");
                OntypeChanged();
            }
        }
        private global::System.String _type;
        partial void OntypeChanging(global::System.String value);
        partial void OntypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime due_time
        {
            get
            {
                return _due_time;
            }
            set
            {
                Ondue_timeChanging(value);
                ReportPropertyChanging("due_time");
                _due_time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("due_time");
                Ondue_timeChanged();
            }
        }
        private global::System.DateTime _due_time;
        partial void Ondue_timeChanging(global::System.DateTime value);
        partial void Ondue_timeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String descriptions
        {
            get
            {
                return _descriptions;
            }
            set
            {
                OndescriptionsChanging(value);
                ReportPropertyChanging("descriptions");
                _descriptions = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("descriptions");
                OndescriptionsChanged();
            }
        }
        private global::System.String _descriptions;
        partial void OndescriptionsChanging(global::System.String value);
        partial void OndescriptionsChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private global::System.Int32 _user_id;
        partial void Onuser_idChanging(global::System.Int32 value);
        partial void Onuser_idChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MFLModel", "FK_MFL_lodge_MFLUsers_product", "MFL_lodge")]
        public EntityCollection<MFL_lodge> MFL_lodge
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MFL_lodge>("MFLModel.FK_MFL_lodge_MFLUsers_product", "MFL_lodge");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MFL_lodge>("MFLModel.FK_MFL_lodge_MFLUsers_product", "MFL_lodge", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MFLModel", "FK_MFL_portal_MFLUsers_product", "MFL_portal")]
        public EntityCollection<MFL_portal> MFL_portal
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MFL_portal>("MFLModel.FK_MFL_portal_MFLUsers_product", "MFL_portal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MFL_portal>("MFLModel.FK_MFL_portal_MFLUsers_product", "MFL_portal", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MFLModel", "FK_MFLUsers_product_MFLUsers_account", "MFLUsers_account")]
        public MFLUsers_account MFLUsers_account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MFLUsers_account>("MFLModel.FK_MFLUsers_product_MFLUsers_account", "MFLUsers_account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MFLUsers_account>("MFLModel.FK_MFLUsers_product_MFLUsers_account", "MFLUsers_account").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MFLUsers_account> MFLUsers_accountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MFLUsers_account>("MFLModel.FK_MFLUsers_product_MFLUsers_account", "MFLUsers_account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MFLUsers_account>("MFLModel.FK_MFLUsers_product_MFLUsers_account", "MFLUsers_account", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
